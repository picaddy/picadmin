<?php

/**
 * BaseDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $document_nom
 * @property integer $document_projet_id
 * @property integer $document_tache_id
 * @property integer $document_idee_id
 * @property integer $document_bug_id
 * @property integer $document_utilisateur_id
 * @property Projet $Projet
 * @property Tache $Tache
 * @property Idee $Idee
 * @property Bug $Bug
 * @property Utilisateur $Utilisateur
 * 
 * @method string      getDocumentNom()             Returns the current record's "document_nom" value
 * @method integer     getDocumentProjetId()        Returns the current record's "document_projet_id" value
 * @method integer     getDocumentTacheId()         Returns the current record's "document_tache_id" value
 * @method integer     getDocumentIdeeId()          Returns the current record's "document_idee_id" value
 * @method integer     getDocumentBugId()           Returns the current record's "document_bug_id" value
 * @method integer     getDocumentUtilisateurId()   Returns the current record's "document_utilisateur_id" value
 * @method Projet      getProjet()                  Returns the current record's "Projet" value
 * @method Tache       getTache()                   Returns the current record's "Tache" value
 * @method Idee        getIdee()                    Returns the current record's "Idee" value
 * @method Bug         getBug()                     Returns the current record's "Bug" value
 * @method Utilisateur getUtilisateur()             Returns the current record's "Utilisateur" value
 * @method Document    setDocumentNom()             Sets the current record's "document_nom" value
 * @method Document    setDocumentProjetId()        Sets the current record's "document_projet_id" value
 * @method Document    setDocumentTacheId()         Sets the current record's "document_tache_id" value
 * @method Document    setDocumentIdeeId()          Sets the current record's "document_idee_id" value
 * @method Document    setDocumentBugId()           Sets the current record's "document_bug_id" value
 * @method Document    setDocumentUtilisateurId()   Sets the current record's "document_utilisateur_id" value
 * @method Document    setProjet()                  Sets the current record's "Projet" value
 * @method Document    setTache()                   Sets the current record's "Tache" value
 * @method Document    setIdee()                    Sets the current record's "Idee" value
 * @method Document    setBug()                     Sets the current record's "Bug" value
 * @method Document    setUtilisateur()             Sets the current record's "Utilisateur" value
 * 
 * @package    adminpicaddy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('document');
        $this->hasColumn('document_nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('document_projet_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_tache_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_idee_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_bug_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_utilisateur_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projet', array(
             'local' => 'document_projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Tache', array(
             'local' => 'document_tache_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Idee', array(
             'local' => 'document_idee_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Bug', array(
             'local' => 'document_bug_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Utilisateur', array(
             'local' => 'document_utilisateur_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}