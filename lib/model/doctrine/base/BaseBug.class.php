<?php

/**
 * BaseBug
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $bug_url
 * @property string $bug_description
 * @property integer $bug_auteur_id
 * @property integer $bug_referent_id
 * @property integer $bug_statut_id
 * @property Utilisateur $Utilisateur
 * @property Statut $Statut
 * @property Doctrine_Collection $CommentaireToBug
 * @property Doctrine_Collection $BugToDocument
 * 
 * @method string              getBugUrl()           Returns the current record's "bug_url" value
 * @method string              getBugDescription()   Returns the current record's "bug_description" value
 * @method integer             getBugAuteurId()      Returns the current record's "bug_auteur_id" value
 * @method integer             getBugReferentId()    Returns the current record's "bug_referent_id" value
 * @method integer             getBugStatutId()      Returns the current record's "bug_statut_id" value
 * @method Utilisateur         getUtilisateur()      Returns the current record's "Utilisateur" value
 * @method Statut              getStatut()           Returns the current record's "Statut" value
 * @method Doctrine_Collection getCommentaireToBug() Returns the current record's "CommentaireToBug" collection
 * @method Doctrine_Collection getBugToDocument()    Returns the current record's "BugToDocument" collection
 * @method Bug                 setBugUrl()           Sets the current record's "bug_url" value
 * @method Bug                 setBugDescription()   Sets the current record's "bug_description" value
 * @method Bug                 setBugAuteurId()      Sets the current record's "bug_auteur_id" value
 * @method Bug                 setBugReferentId()    Sets the current record's "bug_referent_id" value
 * @method Bug                 setBugStatutId()      Sets the current record's "bug_statut_id" value
 * @method Bug                 setUtilisateur()      Sets the current record's "Utilisateur" value
 * @method Bug                 setStatut()           Sets the current record's "Statut" value
 * @method Bug                 setCommentaireToBug() Sets the current record's "CommentaireToBug" collection
 * @method Bug                 setBugToDocument()    Sets the current record's "BugToDocument" collection
 * 
 * @package    adminpicaddy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBug extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bug');
        $this->hasColumn('bug_url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('bug_description', 'string', 1500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1500,
             ));
        $this->hasColumn('bug_auteur_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bug_referent_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bug_statut_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur', array(
             'local' => 'bug_referent_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Statut', array(
             'local' => 'bug_statut_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Commentaire as CommentaireToBug', array(
             'local' => 'id',
             'foreign' => 'commentaire_bug_id'));

        $this->hasMany('Document as BugToDocument', array(
             'local' => 'id',
             'foreign' => 'document_bug_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}